const pokemonRepository = (function () {
  let e = [];
  return {
    getByName: function (t) {
      return e.find((e) => e.name === t);
    },
    getAll: function () {
      return e;
    },
    add: function (t) {
      if ("object" == typeof t && t.name) {
        for (let n = 0; n <= e.length; n++)
          if (e[n] && e[n].name === t.name) return void (e[n] = t);
        e.push(t);
      }
    },
  };
})();
async function fetchPokemons(e = 48) {
  return fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${e}`)
    .then(function (e) {
      return e.json();
    })
    .then(function (e) {
      return e.results;
    })
    .catch(function (e) {
      console.error(e);
    });
}
async function loadDetails(e) {
  try {
    const t = await fetch(e.url),
      n = await t.json();
    return (
      (e.imageUrl = n.sprites.front_shiny),
      (e.imgUrl = n.sprites.back_shiny),
      (e.height = n.height),
      (e.weight = n.weight),
      (e.type = n.types[0].type.name),
      console.log(n.types),
      pokemonRepository.add(e),
      e
    );
  } catch (e) {
    console.error(e);
  }
}
function searchPokemon() {
  var e, t, n, o;
  for (
    e = document.getElementById("myInput").value.toUpperCase(),
      t = document.getElementById("myUl").getElementsByTagName("li"),
      n = 0;
    n < t.length;
    n++
  )
    ((o = t[n].getElementsByTagName("button")[0]).textContent || o.innerText)
      .toUpperCase()
      .indexOf(e) > -1
      ? (t[n].style.display = "")
      : (t[n].style.display = "none");
}
